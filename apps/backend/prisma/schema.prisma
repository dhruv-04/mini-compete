// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  participant
  organizer
}

enum RegistrationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model User {
  userId String @id @default(uuid())
  email String @unique
  name String 
  password String
  role UserRole
  createdAt DateTime @default(now())
  registrations Registrations[]
}

model Competitions {
  competitionId String @id @default(uuid())
  title String
  description String
  tags String[]
  capacity Int
  registeredCount Int @default(0)
  regDeadLine DateTime
  startDate DateTime
  createdAt DateTime @default(now())
  registrations Registrations[]
}

model Registrations {
  registrationID String @id @default(uuid())
  userId String 
  user User @relation(fields: [userId], references: [userId])
  competitionId String
  competition Competitions @relation(fields: [competitionId], references: [competitionId])
  registrationStatus RegistrationStatus @default(PENDING)
  registeredAt DateTime @default(now())
  @@unique([userId, competitionId])
}

model MailBox {
  id String @default(uuid()) @id
  userId String
  to String
  subject String
  body String
  sentAt DateTime @default(now())
}

model FailedJobs {
  id String @default(uuid()) @id
  jobId String
  payload Json
  reason String
  failedAt DateTime @default(now())
}